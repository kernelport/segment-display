{"version":3,"file":"segment-display.umd.js.map","sources":["ng://segment-display/lib/segment-display.service.ts","ng://segment-display/lib/segment-display.component.ts","ng://segment-display/lib/segment-display.module.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SegmentDisplayService {\n\n  constructor() { }\n}\n","import { Component, OnInit, Input } from '@angular/core';\nimport { SegmentDisplay } from 'node_modules/3quarks-segment-display/segment-display.js';\n\ndeclare var SegmentDisplay: any;\n\n@Component({\n  selector: 'lib-SegmentDisplay',\n  template: `\n\t<canvas [id]=this.displayId width=\"600\" height=\"100\" style=\"background-color:rgb(10,10,10);\" >\n\t\tYour browser is unfortunately not supported.\n\t</canvas>\n\t<button (click)=\"reset()\">Reset</button>\n    <p>\n      segment-display works!\n    </p>\n  `,\n  styles: []\n})\nexport class SegmentDisplayComponent implements OnInit {\n\n  public displayId: string;\n  public displayValue: string;\n  private display: any;\n\n  @Input('displayId')\n  public set setDisplayId(displayId: string) {\n        this.displayId = displayId;\n  }\n\n  @Input('displayValue')\n  public set setDisplayValue(displayValue: string) {\n        this.displayValue = displayValue;\n  }\n\n  constructor() {\n        console.log(\"constructor\");\n        console.log(this.displayValue);\n        console.log(this.displayId);\n }\n\n  ngOnInit() {\n        console.log(\"ngOnInit\");\n        console.log(this.displayValue);\n        console.log(this.displayId);\n        this.display = new SegmentDisplay(this.displayId);\n        this.display.pattern         = \"##:##:##\";\n        this.display.displayAngle    = 6;\n        this.display.digitHeight     = 20;\n        this.display.digitWidth      = 14;\n        this.display.digitDistance   = 2.5;\n        this.display.segmentWidth    = 2;\n        this.display.segmentDistance = 0.3;\n        this.display.segmentCount    = 7;\n        this.display.cornerType      = 3;\n        this.display.colorOn         = \"#e95d0f\";\n        this.display.colorOff        = \"#4b1e05\";\n        this.display.draw();\n  }\n\n  ngAfterViewInit(): void {\n        console.log(\"ngOnInit\");\n        console.log(this.displayValue);\n        console.log(this.displayId);\n        this.display.setValue(this.displayValue);\n  }\n\n  reset():void{\n        console.log(\"reset\");\n        this.displayValue = \"88:88:88\";\n        console.log(this.displayValue);\n        console.log(this.displayId);\n        this.display.setValue(this.displayValue);\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { SegmentDisplayComponent } from './segment-display.component';\n\n@NgModule({\n  declarations: [SegmentDisplayComponent],\n  imports: [\n  ],\n  exports: [SegmentDisplayComponent]\n})\nexport class SegmentDisplayModule { }\n"],"names":["Injectable","Component","Input","NgModule"],"mappings":"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"}
